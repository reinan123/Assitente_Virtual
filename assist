# -*- coding: utf-8 -*-

import speech_recognition as sr
from playsound import playsound
from requests import get
from bs4 import BeautifulSoup as bs
from gtts import gTTS

### CONFIGURAÇÕES DA FUNÇÃO PRINCIPAL (GOOGLE CLOUD) ###
hotword = 'rose'
with open('Assistente_DTRod_Credenciais_Google.json') as credenciais_google:
    credenciais_google = credenciais_google.read()

                                        ### FUNÇÕES PRINCIPAIS ###
#obter audio do microfone
def google_cloud():
    microfone = sr.Recognizer()
    with sr.Microphone() as source:
        while True:
            print('Aguardando o Comando: ')
            audio = microfone.listen(source)
            try:
                trigger = microfone.recognize_google_cloud(audio, credentials_json=credenciais_google , language='pt-BR')
                trigger = trigger.lower()

                if hotword in trigger:
                    print('Comando: ', trigger)
                    responde('feedback')
                    executa_comandos(trigger)
                    break
                    
            except sr.UnknownValueError:
                print('Google Clound Recognition could not understand audio')
            except sr.RequestError as e:
                print(f'Google Clound Recognition error, {e}')
    return trigger
    
def responde(arquivo):
    playsound('audios/'+arquivo+'.mp3')

def cria_audio(mensagem):
    tts = gTTS(mensagem, lang='pt-br')
    tts.save('audios/mensagem.mp3')
    playsound('audios/mensagem.mp3') # chamada para windows#

def executa_comandos(trigger):
    if 'noticias' in trigger:
        ultimas_noticias()

                                        ### FUNÇÕES de COMANDO ###
def ultimas_noticias():
    site = get('https://news.google.com/news/rss?ned=pt_br&gl=BR&hl=pt')
    noticias = bs(site.text, 'html.parser')
    for item in noticias.findAll('item')[:2]:
        mensagem = item.title.text
        print(mensagem)
        cria_audio(mensagem)

def main():
    google_cloud()

main()
ultimas_noticias()
